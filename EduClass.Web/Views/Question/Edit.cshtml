@model EduClass.Web.Infrastructure.ViewModels.QuestionViewModel
@{
    ViewBag.Title = "Editar pregunta";

    Dictionary<int, string> _dictionaryQuestionType = new Dictionary<int, string>();

    _dictionaryQuestionType.Add(0, "TRUEORFALSE");
    _dictionaryQuestionType.Add(1, "REDACTION");
    _dictionaryQuestionType.Add(2, "OPTIONS");
    _dictionaryQuestionType.Add(3, "CHECKS");
}

@if (Model == null)
{
    <div class="alert alert-warning">
        <strong>Ups.. </strong> Ha ocurrido un error. Por favor intenta dentro de unos minutos.
    </div>
}

<div class="panel panel-site-traffic col-md-8 col-md-offset-2">
    <div class="panel-heading">
        <ul class="panel-options">
            
        </ul>
        <h4 class="panel-title text-success">Editar pregunta</h4>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm("Edit", "Question", FormMethod.Post, new { id = "frmEditQuestion" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.TestId)



                <div class="form-group">
                    <label for="QuestionType" class="control-label col-md-2">Tipo de pregunta</label>
                    <div class="col-md-10">
                        <select id="evddlQuestionType" class="form-control" data_plugin="select2" disabled>
                            <option value="0">-- Seleccionar --</option>
                            @{
                                var index = 0;
                                foreach (EduClass.Entities.QuestionType item in ((List<EduClass.Entities.QuestionType>)ViewBag.QuestionType))
                                {
                                    if (_dictionaryQuestionType[Convert.ToInt32(Model.QuestionType)].ToString() == item.ToString())
                                    {
                                        <option value="@index" selected>@item.ToString()</option>
                                    }
                                    else
                                    {
                                        <option value="@index">@item.ToString()</option>
                                    }
                                    index++;
                                }
                            }
                        </select>

                        

                    </div>
                </div>

                <div class="form-group">
                    <label for="Content" class="control-label col-md-2">Pregunta</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                    </div>
                </div>

                <hr />
                <div id="opTrueOrFalse" class="hidden">
                    <div class="form-horizontal" id="opTrueOrFalseContent">
                        <div class="row">
                            <input type="hidden" id="chkToFId" name="chkToFId" />
                            <div class="col-md-6 center">
                                <label for="chkTrue">Verdadero</label>
                                <input id="chkTrue" name="chkTrue" type="checkbox" class="form-control checkbox" />
                            </div>
                            <div class="col-md-6">
                                <label for="chkFalse">Falso</label>
                                <input id="chkFalse" name="chkFalse" type="checkbox" class="form-control checkbox" />
                            </div>
                        </div>
                    </div>
                </div>

                <div id="opRedaction" class="hidden">
                    <div class="form-horizontal" id="opRedactionContent">
                        <input type="hidden" id="txtRedactionId" name="txtRedactionId" />
                        <textarea rows="15" id="txtRedaction" name="txtRedaction" class="form-control"></textarea>
                    </div>
                </div>

                <div id="opDiv" class="hidden">
                    <button type="button" id="btnAddOption" class="btn btn-link pull-right mb15 mr10"><i class="fa fa-plus"></i> Agregar opciones</button>

                    <div class="form-horizontal" id="opContent">

                    </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="Guardar" id="btnSubmit" class="btn btn-success pull-right ml10" />
                        <a href="@Url.Action("Index", new { id = Model.TestId })" class="btn btn-primary pull-right">Volver</a>
                    </div>
                </div>
            </div>
        }
    </div>
    <div>
    </div>
</div>
<form action="@Url.Action("RemoveOption")" method="post" id="frmRemoveOp">
    <input type="hidden" id="idop" name="idop" value="" />
</form>


@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@{var sessionMessage = EduClass.Web.Infrastructure.Sessions.MessageSession.GetMessage(); }

<script src="~/Scripts/app/helpersSite.js"></script>
<script type="text/javascript">
    var qtyOption = 0
    var optionTypeSelected = "";


    $(document).ready(function () {

        showQuestionType();

        var message = "@Html.Raw(sessionMessage.ToString())";

        if (message != "") {
            showMessageJS(message);
        }

        $('#btnSubmit').click(function () {
            
            var flag = false;

            if ($('#Content').val() == '') {
                showMessageJS('info,Atención,El campo pregunta es requerido')
                return false;
            }

            switch ($('#evddlQuestionType option:selected').text()) {
                case "REDACTION":
                    flag = true;
                    break;
                case "OPTIONS":

                    $('input[type="radio"]').each(function (index, item) {
                        
                        if ($(item).prop('checked')) { flag = true; }
                    });

                    break;
                case "CHECKS",
                     "TRUEORFALSE":

                    $('input[type="checkbox"]').each(function (index, item) {

                        if ($(item).prop('checked')) { flag = true; }
                    });

                    break;
                default:

            }

            //Envio formulario.
            if (flag) {
                $('#frmEditQuestion').submit();
            } else {
                showMessageJS('info,Atención,Debes seleccionar por lo menos una opción correcta.')
            }

        });

        $('#evddlQuestionType').change(function () {
            showQuestionType();
        });

        $('#btnAddOption').click(function () {

            if ($('#opContent').children().length < 6) {

                createOption('new-' + qtyOption, '',false);

                qtyOption++;

                reBind();

            } else {
                showMessageJS('warning,Atención,No se pueden agregar más de 6 opciones')
            }
        });

        $('#chkTrue').click(function(){
            $('#chkFalse').removeAttr('checked');
        });

        $('#chkFalse').click(function(){
            $('#chkTrue').removeAttr('checked');
        });

        updateFields();
    });

    function showQuestionType() {
        $("select option:selected").each(function () {

            switch ($(this).text()) {
                case "TRUEORFALSE":

                    $('#opContent').empty()

                    $('#opDiv').addClass("hidden");
                    $('#opRedaction').addClass("hidden");
                    $('#opTrueOrFalse').removeClass("hidden");
                    break;
                case "REDACTION":

                    $('#opContent').empty()

                    $('#opTrueOrFalse').addClass("hidden");
                    $('#opDiv').addClass("hidden");
                    $('#opRedaction').removeClass("hidden");
                    break;
                case "OPTIONS":
                case "CHECKS":

                    $('#opContent').empty()

                    optionTypeSelected = $(this).text();

                    $('#opTrueOrFalse').addClass("hidden");
                    $('#opRedaction').addClass("hidden");
                    $('#opDiv').removeClass("hidden");
                    break;
                default:

            }
        });

    }

    function reBind() {
        $('#opContent').on('click', '.removeOp', function (e) {

            var id = $(this).data('op');

            $('#op-' + id).remove();

            qtyOption = qtyOption - 1;
        });

        $('#opContent').on('click', '.removeOpServer', function (e) {

            var id = $(this).data('op');

            $('#idop').val(id);

            $('#frmRemoveOp').submit();
        });

        $('#opContent').on('click', 'input[type="radio"]', function (e) {

            $('input[type="radio"]').removeAttr('checked');

            $(this).prop('checked','checked');
        });

    }

    function createOption(id, contentOption, isCorrect)
    {
        qtyOption++;

        var themplate = '<div class="form-group option" id="op-' + qtyOption + '"> \
                            <div class="row"> \
                                <div class="col-md-10 col-lg-offset-2 pull-left"> \
                                    <div class="row"> \
                                        <div class="col-md-1"> ';
                                        if (optionTypeSelected == "OPTIONS") {
                                            themplate += '<input type="radio" id="chkOp-' + qtyOption + '" name="chkOp-' + id + '" value="True"' + (((isCorrect === "true")) ? ' checked="checked" ' : '') + '/> '
                                        } else {
                                            themplate += '<input type="checkbox" id="chkOp-' + qtyOption + '" name="chkOp-' + id + '" class="form-control"' + ((isCorrect === "true") ? ' checked="checked" ' : '') + '/> '
                                        }

                                        themplate += '</div> \
                                        <div class="col-md-11"> \
                                            <div class="input-group mr20"> \
                                                <input class="form-control" type="text" name="opTxt-' + id + '" id="opTxt-' + qtyOption + '" value="' + contentOption + '"> \
                                                <span class="input-group-btn"> ';
                                                    if (id == 0)
                                                    {
                                                        themplate += '<button type="button" class="btn btn-danger removeOp" data-op="' + qtyOption + '"><i class="fa fa-trash"></i></button> ';
                                                    }else {
                                                        themplate += '<button type="button" class="btn btn-danger removeOpServer" data-op="' + id + '"><i class="fa fa-trash"></i></button> ';
                                                    }
                                                            
                                                themplate += '</span> \
                                            </div> \
                                        </div> \
                                    </div> \
                                </div> \
                            </div> \
                        </div>';

                    $('#opContent').append(themplate);
                    reBind();
    }

    function updateFields() {
        switch ('@Html.Raw(_dictionaryQuestionType[Convert.ToInt32(Model.QuestionType)].ToString())') {
            case "TRUEORFALSE":

                @{
                    var tOF = ((System.Collections.Generic.HashSet<EduClass.Entities.QuestionOption>)ViewBag.QuestionOptions).ToList()[0];

                    <text>
                        $('#chkToFId').val(@Html.Raw(tOF.Id));
                    </text>
                    
                    if (Convert.ToBoolean(tOF.TrueOrFalse))
                    {
                        <text>
                            $('#chkTrue').prop('checked', true);
                        </text>
                    }
                    else
                    {
                        <text>
                            $('#chkFalse').prop('checked', true);
                        </text>
                    }
                }

                break;
            case "REDACTION":
                @{
                    var redaction = ((System.Collections.Generic.HashSet<EduClass.Entities.QuestionOption>)ViewBag.QuestionOptions).ToList()[0];

                    
                    <text>
                        $('#txtRedactionId').val(@Html.Raw(redaction.Id));
                        $('#txtRedaction').val('@Html.Raw(redaction.Text)');
                    </text>
                }

                break;
            case "OPTIONS":
            case "CHECKS":

                optionTypeSelected = '@Html.Raw(_dictionaryQuestionType[Convert.ToInt32(Model.QuestionType)].ToString())';

                @{

                    var options = ((System.Collections.Generic.HashSet<EduClass.Entities.QuestionOption>)ViewBag.QuestionOptions).ToList();

                    foreach (var item in options)
                    {
                        <text>
                            createOption(@Html.Raw(item.Id), '@Html.Raw(item.Content)', '@Html.Raw(item.IsCorrect.ToString().ToLower())')
                        </text>
                    }
                }

                break;
            default:
                break;
        }
    }
</script>

