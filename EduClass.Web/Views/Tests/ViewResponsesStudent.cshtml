@using System.Collections.Generic;
@using EduClass.Entities;

@{
    var student = (Student)ViewBag.Student;
    
    ViewBag.Title = student.FirstName + " " + student.LastName;
    var qtyQuestions = ((List<Question>)ViewBag.TestQuestions).FindAll(x => x.Enabled).Count();
    
}

<div class="col-md-10 col-md-offset-1">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h3 class="panel-title">@student.FirstName  @student.LastName <span class="label label-warning pull-right" style="font-size: 14px"><strong>TOTAL: </strong><span id="qtyCorrect"></span>/@qtyQuestions</span></h3>
            
        </div>
        <div id="divTest" class="panel-body">

            @foreach (Question item in (List<Question>)ViewBag.TestQuestions)
            {

                if (item.Enabled)
                {
                    
                    <h4>@item.Content <span id="isCorrectLabel-@item.Id" class="label"></span></h4>
                    <br />
                    if (item.QuestionType == EduClass.Entities.QuestionType.TRUEORFALSE)
                    {
                        <input type="radio" name="tof-true-@item.Id" value="true" data-id="@item.Id" class="QtToF" disabled />
                        <span>Verdadero</span>
                        <br />
                        <input type="radio" name="tof-false-@item.Id" value="false" data-id="@item.Id" class="QtToF" disabled/>
                        <span>Falso</span>
                    }
                    else if (item.QuestionType == EduClass.Entities.QuestionType.REDACTION)
                    {
                        using (Html.BeginForm("MarkRedactionOptionType", "Tests", FormMethod.Post, new { @id = "frmRedaction-" + item.Id }))
                        {
                            <textarea class="form-control QtRedaction" name="redaction-@item.Id" data-id="@item.Id" cols="60" rows="10" disabled></textarea>
                            <input type="hidden" class="idResponse-@item.Id" name="idResponse" />
                            <input type="hidden"  class="responseT-@item.Id" name="responseT" />
                            <div id="btnRedaction-@item.Id" class="row mt10 hidden">
                                <div class="col-md-6">
                                    <input type="button" class="btn btn-success form-control btnRedaction" data-id="@item.Id" value="Correcta"/>
                                </div>
                                <div class="col-md-6">
                                    <input type="button" class="btn btn-danger form-control btnRedaction" data-id="@item.Id" value="Incorrecta" />
                                </div>
                            </div>
                        }
                    }
                    else if (item.QuestionType == EduClass.Entities.QuestionType.OPTIONS)
                    {
                        foreach (var qop in item.QuestionOptions)
                        {
                            <input type="radio" name="op-@item.Id" value="@qop.Id" class="QtOptions" data-id="@item.Id" disabled />
                            <span>@qop.Content</span><br />
                        }
                    }
                    else if (item.QuestionType == EduClass.Entities.QuestionType.CHECKS)
                    {
                        foreach (var qop in item.QuestionOptions)
                        {
                            <input type="checkbox" name="chk-@item.Id" value="@qop.Id" data-id="@item.Id" data-iscorrect="@qop.IsCorrect.ToString().ToLower()" class="QtChecks" disabled/>
                            <span>@qop.Content</span> <br />
                        }
                    }

                    <hr />  
                }
            }
    </div>
    <div class="panel-footer">
        <div class="row">
            <a href="@Url.Action("ViewStudentsTest", new { id = ViewBag.TestId })" class="btn btn-primary pull-right">Volver</a>
        </div>
    </div>
</div>
</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@{var sessionMessage = EduClass.Web.Infrastructure.Sessions.MessageSession.GetMessage(); }

<script src="~/Scripts/app/helpersSite.js"></script>
<script type="text/javascript">
    var listChecks = [];
    var qtyCorrect = 0;

    $(document).ready(function () {
        UpdateFields();
        checkCorrectQuestion();

        $('#qtyCorrect').text(qtyCorrect);

        $('.btnRedaction').click(function(){

            var idQuestion = $(this).data('id');
            var responseT = false;

            if ($(this).val() === 'Correcta') {
                responseT = true;
            }
            
            $('.responseT-' + idQuestion).val(responseT);

            $('#frmRedaction-' + idQuestion).submit();
        });
    });

    function UpdateFields() {
        @foreach (Response item in (List<Response>)ViewBag.StudentResponses)
        {
            switch(item.Question.QuestionType)
            {
                case QuestionType.TRUEORFALSE:

                    if (item.TrueOrFalse != null)
                    {
                        //var correct = (item.IsCorrec == null) ? false : item.IsCorrect.Value;
                        
                        if (item.TrueOrFalse.Value)
                        {
                            <text>
                                markQuestions('input[name="tof-true-@item.QuestionId"]')
                            </text>
                        }
                        else
                        {
                            <text>
                                markQuestions('input[name="tof-false-@item.QuestionId"]')
                            </text>
                        }
                        
                        <text>
                            markCorrectOrIncorrect('#isCorrectLabel-@item.QuestionId', @item.IsCorrect.Value.ToString().ToLower())
                        </text>
                    }

                    break;
                case QuestionType.REDACTION:
                        if (item.IsCorrect == null) {
                            <text>
                                $('#btnRedaction-@item.QuestionId').removeClass('hidden');
                            </text>
                        }
                        else
                        {
                            <text>
                                markCorrectOrIncorrect('#isCorrectLabel-@item.QuestionId', @item.IsCorrect.Value.ToString().ToLower())
                            </text>        
                        }
                        
                    
                        <text>
                            $('.idResponse-@item.QuestionId').val(@item.Id)
                            $('textarea[name="redaction-@item.QuestionId"]').text('@item.Content');
                        </text>
                    break;
                case QuestionType.OPTIONS:
                    var correct = (item.IsCorrect == null) ? false : item.IsCorrect.Value;
                    <text>
                        markQuestions('input[name="op-@item.QuestionId"][value="@item.QuestionOptionId"]')
                        markCorrectOrIncorrect('#isCorrectLabel-@item.QuestionId', @correct.ToString().ToLower())
                    </text>

                    break;
                case QuestionType.CHECKS:
                
                    <text>        
                        var chk = searchInListChecks(@item.QuestionId);
                        chk.addOptionCheck(@item.QuestionOptionId)
                        markQuestions('input[name="chk-@item.QuestionId"][value="@item.QuestionOptionId"]')
                    </text>    
                    break;
            }
        }
    }

    function markQuestions(obj) {
        $(obj).prop('checked', 'checked');
    }

    function markCorrectOrIncorrect(obj, isCorrect) {
        var xClass;
        var text;

        if (isCorrect) {
            qtyCorrect++;

            xClass = 'label-success';
            text = 'Correcta';
        } else {
            xClass = 'label-danger';
            text = 'Incorrecta';
        }

        $(obj).addClass(xClass);
        $(obj).text(text);        
    }
   
    function checksObj(idQuestion)
    {
        this.idQuestion = idQuestion;
        this.idOption = [];

        this.addOptionCheck = function(id){
            var flag = true;

            for (var i = 0; i < this.idOption.length; i++) {
                
                if (this.idOption[i] == id) {
                    flag = false;
                }
            }

            if (flag) {
                this.idOption.push(id);
            }
        };
    }

    function searchInListChecks(id) {

        for (var i = 0; i < listChecks.length; i++) {
            
            if (listChecks[i] !== undefined && listChecks[i].idQuestion == id) {
                return listChecks[i];
            } 
        }
        var chk = new checksObj(id);
        listChecks.push(chk)
        return chk; 
    }

    function checkCorrectQuestion(){


        for (var i = 0; i < listChecks.length; i++) {
            
            var listCorrects = [];
    
            $('input[type="checkbox"][data-id=' + listChecks[i].idQuestion + ']').each(function(i, item){
                
                var is = $(item).data('iscorrect');
                
                if (is) {
                    listCorrects.push($(item).val());
                }
            });

            var student = listChecks[i].idOption.join();
            var professor = listCorrects.join();
            var retorno = student == professor;
            
            markCorrectOrIncorrect('#isCorrectLabel-' + listChecks[i].idQuestion, retorno);
        }

        
    }

</script>

